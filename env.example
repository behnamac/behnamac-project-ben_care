# ===========================================
# HEALTHCARE APPLICATION ENVIRONMENT VARIABLES
# ===========================================
# Copy this file to .env.local and fill in your actual values

# ===========================================
# DATABASE CONFIGURATION (MySQL with Prisma)
# ===========================================
# MySQL database connection string
# Format: mysql://username:password@host:port/database_name
DATABASE_URL="mysql://root:password@localhost:3306/healthcare_db"

# ===========================================
# NEXT-AUTH CONFIGURATION
# ===========================================
# Secret for NextAuth.js (generate a random string)
NEXTAUTH_SECRET=your_nextauth_secret_here

# URL for NextAuth.js (your application URL)
NEXTAUTH_URL=http://localhost:3000

# ===========================================
# APPLICATION SECURITY
# ===========================================
# Admin passkey for accessing admin dashboard
# Change this to a secure value in production
NEXT_PUBLIC_ADMIN_PASSKEY=111111

# ===========================================
# SENTRY CONFIGURATION (Optional)
# ===========================================
# Sentry DSN for error tracking and performance monitoring
# Get this from your Sentry project settings
SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# ===========================================
# NEXT.JS CONFIGURATION
# ===========================================
# Next.js environment
NODE_ENV=development

# ===========================================
# SETUP INSTRUCTIONS
# ===========================================
# 1. Copy this file to .env.local
# 2. Sign up for Appwrite at https://appwrite.io/
# 3. Create a new project in Appwrite console
# 4. Create a database and the following collections:
#    - Patients (for patient information)
#    - Doctors (for doctor information) 
#    - Appointments (for appointment scheduling)
# 5. Create a storage bucket for file uploads
# 6. Generate an API key with full access
# 7. Replace all placeholder values with your actual Appwrite credentials
# 8. Change the admin passkey to a secure value
# 9. Run: npm run dev

# ===========================================
# COLLECTION SCHEMAS TO CREATE IN APPWRITE
# ===========================================
# 
# PATIENTS COLLECTION:
# - userId (String, Required)
# - name (String, Required)
# - email (String, Required)
# - phone (String, Required)
# - birthDate (DateTime, Required)
# - gender (Enum: Male, Female, Other, Required)
# - address (String, Required)
# - occupation (String, Required)
# - emergencyContactName (String, Required)
# - emergencyContactNumber (String, Required)
# - primaryPhysician (String, Required)
# - insuranceProvider (String, Required)
# - insurancePolicyNumber (String, Required)
# - allergies (String, Optional)
# - currentMedication (String, Optional)
# - familyMedicalHistory (String, Optional)
# - pastMedicalHistory (String, Optional)
# - identificationType (String, Optional)
# - identificationNumber (String, Optional)
# - identificationDocumentId (String, Optional)
# - identificationDocumentUrl (String, Optional)
# - privacyConsent (Boolean, Required)
#
# DOCTORS COLLECTION:
# - name (String, Required)
# - image (String, Required)
# - specialization (String, Optional)
# - phone (String, Optional)
# - email (String, Optional)
#
# APPOINTMENTS COLLECTION:
# - patient (String, Required) - Reference to patient document
# - schedule (DateTime, Required)
# - status (Enum: pending, scheduled, cancelled, Required)
# - primaryPhysician (String, Required)
# - reason (String, Required)
# - note (String, Optional)
# - userId (String, Required)
# - cancellationReason (String, Optional)
